############################# MISC##################################



############################# START/END PRINT ##################################

[gcode_macro START_PRINT]
; gcode parameters for area bed mesh
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
variable_temp_target: 230
gcode:
   {% set BED_TEMP = params.BED|int %}
   {% set HOTEND_TEMP = params.HOTEND|default(40)|float %} #{% set HOTEND_TEMP = params.HOTEND| int%}  # Get hotend temp from START_PRINT macro
   {% set CHAMBER_TEMP =params.CHAMBER|default(0)|int %}
   {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=temp_target VALUE={ HOTEND_TEMP } # Set the hotend temp to the variable of the START_PRINT macro (the line below [gcode_macro START_PRINT_TEST]) The default is 210 if you're not printing. 
   #Set Stealthburner LEDs
   STATUS_HOMING
    #Only run G28 if we're not already homed
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
  #Enable Filament Sensor
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
  #Set Stealthburner LEDs
   STATUS_HEATING
  #Set and wait for bed to reach temperature
   M190 S{BED_TEMP}
    {% if BED_TEMP <=75 %}
   SET_PIN PIN=Exhaust_fan VALUE=1
    {% endif %}
  TEMPERATURE_WAIT SENSOR="temperature_sensor CHAMBER" MINIMUM={CHAMBER_TEMP}
    #Pre-heat extruder to 160
   M104 S160
	#Reset Extruder
   G92 E0 
    # Use absolute coordinates
   G90
    #Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
    #Set Stealthburner LEDs
   STATUS_MESHING
   #Bed Mesh
  Attach_Probe_Lock
  BED_MESH_CALIBRATE
  #Dock Probe
   Dock_Probe_Unlock
    # Use absolute coordinates
   G90
   STATUS_READY
    #Set and wait for extruder temperature
   M104 S{HOTEND_TEMP}
   M109 S{HOTEND_TEMP}
    #Clean nozzle when at temp
   NOZZLE_SCRUB
    #Set Stealthburner LEDs
  STATUS_PRINTING
    #Purging
  ADAPTIVE_PURGE
   #PURGE_LINE
   # Use relative E
   M83

[gcode_macro END_PRINT]
gcode:
#Set Stealthburner LEDs
    STATUS_READY
# Turn off bed, extruder, and fan
    TURN_OFF_HEATERS
    # Move nozzle away from print while retracting
    #Relative positioning
    G91
    #Retract a bit
	G1 E-2 F2700
	#Retract and raise Z
	G1 E-3 Z0.2 F2400
	#Wipe out
	G1 X5 Y5 F3000
	#Raise Z more
	G1 Z10
    #Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
	#Absolute positioning
	G90
	#Present print
	G1 X-15 Y215
    #Disable steppers
    M84
    #Disable Filament sensor
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    UPDATE_DELAYED_GCODE ID=MFNano_cooldown DURATION=1
    #shut of exhaust fan
    SET_PIN PIN=Exhaust_fan VALUE=0
    #clear bed mesh
    BED_MESH_CLEAR
    STATUS_OFF
    #set delayed auto power off
    #UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=500

############################# SCRUB/PURGE ##################################

[gcode_macro NOZZLE_SCRUB]
description: Nozzle scrubbing
gcode:
    STATUS_CLEANING
    G92 E0 
    G1 E-1
    G1 Z2
    G1 X-15 Y-5 F3000
    G1 Z0
    G1 X5
    G1 X-15
    G1 X5
    G1 X-15
    G1 X5
    G1 Z2

[gcode_macro PURGE_LINE]
description: Purge line for start macro
gcode:
    #Move to start position
	G1 X85 Y-5 Z0.3 F5000.0
	#Draw the first line
	G1 X150 Y-5 Z0.3 F1500.0 E15
	#Move to side a little
	G1 X150 Y-4.5 Z0.3 F5000.0
	#Draw the second line
	G1 X85 Y-4.5 Z0.3 F1500.0 E20
	#Move Z Axis up little to prevent scratching of Heat Bed
	G1 Z2.0 E19.5 F3000
    #Reset Extruder
	G92 E0 
	#Move over to prevent blob squish
	G1 X60 Y-4.5


[delayed_gcode MFNano_cooldown]
initial_duration: 0
gcode:
  {% if printer.heater_bed.temperature|int >= 75 %}
			BedFansFast															# If bed is over 80c, run Nevermore
            UPDATE_DELAYED_GCODE ID=MFNano_cooldown DURATION=20						# If temp not reached yet: loop again
		{% else %}
			UPDATE_DELAYED_GCODE ID=MFNano_cooldown DURATION=0						# Turn off loop
            BedFansOff															# Turn off fan
		{% endif %}
############################# BED SCREW ADJUST ##################################

#	[gcode_macro SCREWS_TILT_CALCULATE]
#	rename_existing: _SCREWS_TILT_CALCULATE
#	gcode:
#	    G90
#	    STATUS_CALIBRATING_Z
#	    DEPLOY_PROBE
#	    G1 Z10 F3000 ; move up to prevent accidentally scratching build plate    
#	    _SCREWS_TILT_CALCULATE {% for p in params
#	          %}{'%s=%s ' % (p, params[p])}{%
#	         endfor %}
#	    {% if "y" not in (printer.toolhead.homed_axes | lower) %}
#	    G1 X0 Y0 F15000
#	    DOCK_PROBE
#	    STATUS_READY
#	[gcode_macro SCREW_ADJUSTMENT]
#	description: Bed screw adjust with deployable probe
#	gcode:
#	    SCREWS_TILT_CALCULATE



############################# FILAMENT ##################################
    
#[gcode_macro UNLOAD_FILAMENT]
#   Extrusion lengths must be adjusted for your particular configuration before use
#gcode:
   # {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  #RESPOND TYPE=command MSG={TARGET_TEMP} # This was a test to print the requested temperature. But you can add the {TARGET_TEMP} everywhere in the macro to use it.
   # PARKFRONT                             ; Park Position
   # SAVE_GCODE_STATE NAME=UNLOADFILAMENT
   # G91                                    ; Relative Position
    #PARKFRONT                             ; Park Position
    #M106 S0                               ; partcooling off
   # M109 S{TARGET_TEMP}                  ; heat up the hotend
   # M83                                   ; set extruder to relative
   # G1 E10 F300                           ; extrude a little to soften tip
   # G1 E-100 F1000                         ; retract filament completely
   # G1 E-50 F300                         ; retract filament completely
    #G92 E0                                ; Reset the position of extruder
   # RESTORE_GCODE_STATE NAME=UNLOADFILAMENT
   # STATUS_BUSY
   # M400
   # M117 Unload Complete!
	#RESPOND MSG=Unload Complete!
   # STATUS_READY


[gcode_macro UNLOAD_FILAMENT]
description: Unloads filament from toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
   STATUS_HOMING
    #Only run G28 if we're not already homed
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
  PARKFRONT                       ; move the toolhead to the front
  STATUS_BUSY
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
  STATUS_READY
  M83                         ; set extruder to relative mode
  G1 E10 F300                 ; extrude a little to soften tip
  G1 E-8 F1800                ; quickly retract a small amount to elimate stringing
  #G4 P200                     ; pause for a short amount of time
  G1 E-75 F300                ; retract slowly the rest of the way
  G1 E-20 F300
  M400                        ; wait for moves to finish
  M117 Unload Complete!

#[gcode_macro LOAD_FILAMENT]
#   Extrusion lengths must be adjusted for your particular configuration before use
#gcode:
 #   {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  #RESPOND TYPE=command MSG={TARGET_TEMP} # This was a test to print the requested temperature. But you can add the {TARGET_TEMP} everywhere in the macro to use it.
  #  STATUS_HEATING
   # PARKFRONT                             ; Park Position
   # SAVE_GCODE_STATE NAME=LOADFILAMENT
   # G91                                  ; Relative Position
   # M83                                  ; set extruder to Relative
   # G1 E75 F1200                         ; quickly load filament to down bowden
   # G1 E75 F200                          ; slower extrusion for hotend path
   # G1 E-5 F3000                         ; prime nozzle with filament
    #G92 E0                               ; Reset the position of extruder
   # RESTORE_GCODE_STATE NAME=LOADFILAMENT
   # STATUS_BUSY
   # M400
   # M117 Load Complete!
   # M109 S{TARGET_TEMP}                 ; heat up the hotend
   # G90
   # M83
	#RESPOND MSG=Load Complete!
   # STATUS_READY
[gcode_macro LOAD_FILAMENT]
description: Loads new filament into toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
     STATUS_HOMING
    #Only run G28 if we're not already homed
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
  STATUS_HEATING
    PARKFRONT                       ; move the toolhead to the front
  #LOGO_PENDING
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
  #LOGO_READY
  M83                         ; set extruder to relative mode
  G1 E75 F300                 ; extrude slowlyL
  G1 E75 F300
  G1 E-5 F3000
  M400                        ; wait for moves to finish
  M117 Load Complete!



[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    RESTORE_GCODE_STATE NAME=M600_state
   

############################# PAUSE/RESUME/CANCEL ##################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  M106 S0
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  PARKFRONT

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}


############################# PARKING ##################################

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = -15  %}
  {% set y_park = 215  %}
  {% set z_park_delta = 50 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F1000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro PARK]
gcode:
    #Home the printer
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    #Set coordinates to absolute
    G90
    #Park printhead in the middle
    G1 X117.5 Y117.5 Z15 F2000
    #Turn off steppers
    M84

[gcode_macro PARKFRONT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}                                                                                                                       ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500        ; park front center, center Z
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
[gcode_macro PARKFRONTLOW]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}                                                                                                                   ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500                                     ; park front center, 50mm up
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
[gcode_macro PARKFRONTHIGH]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}                                                                                                                     ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONTHIGH
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z-80} F19500                                       ; park front center, 50mm up
    RESTORE_GCODE_STATE NAME=PARKFRONTHIGH
    
[gcode_macro PARKCENTER]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}                                                                                                                      ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500    ; park center of build volume
    RESTORE_GCODE_STATE NAME=PARKCENTER
    
[gcode_macro PARKBED]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}                                                                                                                       ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500                                     ; park above center of bed
    RESTORE_GCODE_STATE NAME=PARKBED

############################# HOMING ##################################

#[gcode_macro G28]
#description: Homing with SB Light Changes
#rename_existing: G28999
#gcode:
#    STATUS_HOMING
#    G28999 { rawparams }
#    STATUS_READY
